import("//build/gn/windows/ninja.gni")
import("//build/gn/windows/config/winsdk.gni")

touch_cmd = rebase_path("touch.cmd", root_build_dir)

template("msvc_toolchain") {

  env = "/msvc_environment." + invoker.cpu
  env_path = rebase_path(root_build_dir + env)

  msvc_config = exec_script("../../../../script/setup_msvc_environment.py", [ invoker.vs_version, invoker.cpu, env_path,], "scope")

  toolchain(target_name) {
    tool("cxx") {
      rspfile = "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.rsp"
      pdbname = "{{target_out_dir}}/{{target_output_name}}.{{source_name_part}}.pdb"
      command = "$ninja -t msvc -e $env -- cl.exe /nologo /EHsc \"${msvc_config.include}\" /I \"${winsdk.include}\ucrt\" /showIncludes /FC @$rspfile /c {{source}} /Fo{{output}} /Fd$pdbname"
      depsformat = "msvc"
      description = "CXX {{output}}"
      outputs = [
        "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.obj",
      ]
      rspfile_content = "{{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}}"
    }

    tool("link") {
      outfile = "{{output_dir}}/{{target_output_name}}{{output_extension}}"
      pdbfile = "{{output_dir}}/{{target_output_name}}.pdb"
      rspfile = "$outfile.rsp"
      command = "$ninja -t msvc -e $env -- link.exe /nologo /LIBPATH:\"${msvc_config.lib}\" /LIBPATH:\"${winsdk.lib}\ucrt\x64\" /LIBPATH:\"${winsdk.lib}\um\x64\" /OUT:$outfile /PDB:$pdbfile @$rspfile"
      description = "LINK {{label}}"
      default_output_dir = "out/${invoker.os}/bin"
      rspfile_content = "{{inputs}}"
      outputs = [
        outfile
      ]
    }

    tool("stamp") {
      command = "$touch_cmd {{output}}"
      description = "STAMP {{output}}"
    }

    toolchain_args = {
        current_os = invoker.os
        current_cpu = invoker.cpu

        target_os = target_os
        target_cpu = target_cpu
    }
  }
}